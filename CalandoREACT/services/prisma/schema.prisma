// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model presidente{
  id Int @id @default(autoincrement())
  nombre String
  contacto String
}
model Liga{
  id Int @id @default(autoincrement())
  nombreLiga String
  edad_min Int
  edad_max Int
  categoria String
  nombrePresidente String
  contactoPresidente String
  equipo equipo[]
}
model equipo{
  id  Int @id @default(autoincrement())
  nombre String
  entrenador String
  logo String?
  ligaId Int?
  liga Liga?   @relation(fields: [ligaId], references: [id])
  jugadores jugador[]
}

model jugador {
  id              Int       @id @default(autoincrement())
  nombre          String
  apellidoPaterno String
  apellidoMaterno String?   @default("N/A")
  fechaNacimiento DateTime
  numero          Int
  posicion        Posicion
  foto            String?   @default("default.png")

  equipo   equipo @relation(fields: [equipoId], references: [id])
  equipoId Int

  @@unique([equipoId, numero]) // No permitir dos jugadores con mismo n√∫mero en un equipo
}

enum Posicion {
  P    // Pitcher
  C    // Catcher
  PrimeraBase  // Primera Base
  SegundaBase // Segunda Base
  TerceraBase  // Tercera Base
  SS   // Shortstop
  LF   // Left Field
  CF   // Center Field
  RF   // Right Field
  DH   // Designated Hitter (Bateador Designado)
  SUB  // Suplente
}
